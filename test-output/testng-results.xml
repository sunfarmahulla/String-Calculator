<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="7" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-06-06T06:16:33Z" name="Default suite" finished-at="2020-06-06T06:16:33Z" duration-ms="95">
    <groups>
    </groups>
    <test started-at="2020-06-06T06:16:33Z" name="Default test" finished-at="2020-06-06T06:16:33Z" duration-ms="95">
      <class name="TestCalculator">
        <test-method is-config="true" signature="init()[pri:0, instance:TestCalculator@1a052a00]" started-at="2020-06-06T06:16:33Z" name="init" finished-at="2020-06-06T06:16:33Z" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="IgnoreNumGreaterThan1000()[pri:0, instance:TestCalculator@1a052a00]" started-at="2020-06-06T06:16:33Z" name="IgnoreNumGreaterThan1000" finished-at="2020-06-06T06:16:33Z" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IgnoreNumGreaterThan1000 -->
        <test-method signature="addThreeNUmberWithDelimeterReturnSum()[pri:0, instance:TestCalculator@1a052a00]" started-at="2020-06-06T06:16:33Z" name="addThreeNUmberWithDelimeterReturnSum" finished-at="2020-06-06T06:16:33Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addThreeNUmberWithDelimeterReturnSum -->
        <test-method signature="emptyStringReturnZero()[pri:0, instance:TestCalculator@1a052a00]" started-at="2020-06-06T06:16:33Z" name="emptyStringReturnZero" finished-at="2020-06-06T06:16:33Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyStringReturnZero -->
        <test-method signature="negativeException()[pri:0, instance:TestCalculator@1a052a00]" started-at="2020-06-06T06:16:33Z" name="negativeException" finished-at="2020-06-06T06:16:33Z" duration-ms="3" status="PASS">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[Negative string input,please use positive values]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: Negative string input,please use positive values
at AddString.sum(AddString.java:30)
at AddString.addString(AddString.java:13)
at TestCalculator.negativeException(TestCalculator.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- negativeException -->
        <test-method signature="singleValueReply()[pri:0, instance:TestCalculator@1a052a00]" started-at="2020-06-06T06:16:33Z" name="singleValueReply" finished-at="2020-06-06T06:16:33Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleValueReply -->
        <test-method signature="twoNumbersCommaDelimeterReturnSum()[pri:0, instance:TestCalculator@1a052a00]" started-at="2020-06-06T06:16:33Z" name="twoNumbersCommaDelimeterReturnSum" finished-at="2020-06-06T06:16:33Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twoNumbersCommaDelimeterReturnSum -->
        <test-method signature="twonumbersLinechnageDelimeterReturnsum()[pri:0, instance:TestCalculator@1a052a00]" started-at="2020-06-06T06:16:33Z" name="twonumbersLinechnageDelimeterReturnsum" finished-at="2020-06-06T06:16:33Z" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twonumbersLinechnageDelimeterReturnsum -->
      </class> <!-- TestCalculator -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
